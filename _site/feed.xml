<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description></description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 17 Jan 2015 18:51:38 +0800</pubDate>
    <lastBuildDate>Sat, 17 Jan 2015 18:51:38 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Tow</title>
        <description>
</description>
        <pubDate>Sun, 11 Jan 2015 00:00:00 +0800</pubDate>
        <link>/2015/01/11/tow/</link>
        <guid isPermaLink="true">/2015/01/11/tow/</guid>
        
        
      </item>
    
      <item>
        <title>序列化与反序列化</title>
        <description>&lt;p&gt;归档即序列化与反序列化&lt;/p&gt;

&lt;p&gt;NSCoding是一个协议，主要是下面两个方法&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;-(id)initWithCoder:(NSCoder *)coder;//从coder中读取数据，保存到相应的变量中，即反序列化数据&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;-(void)encoderWithCoder:(NSCoder *)coder;//读取实例变量，并把这些数据写到coder中去。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;NSCoder是一个抽象类，抽象类不能被实例化，只能提供一些想让子类继承的方法&lt;/strong&gt; &lt;br/&gt;
&lt;strong&gt;NSKeyedUnarchiver 从二进制流读取对象&lt;/strong&gt; &lt;br/&gt;
&lt;strong&gt;NSKeyedArchiver   把对象写到二进制流中去&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如下，在ZYRestaurant定义了如下这些属性&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
@interface ZYRestaurant : NSObject&amp;lt;NSCoding&amp;gt;

@property (nonatomic,copy) NSString *shopID;
@property (nonatomic,copy) NSString *title;
@property (nonatomic,copy) NSString *discount;
@property (nonatomic,copy) NSString *address;

@end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在ZYRestaurant.m里面实现如下这些方法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- (id)initWithCoder:(NSCoder *)aDecoder
{
    if (self = [super init]) {
        _shopID = [aDecoder decodeObjectForKey:@&quot;shopid&quot;];
        _title = [aDecoder decodeObjectForKey:@&quot;title&quot;];
        _discount = [aDecoder decodeObjectForKey:@&quot;discount&quot;];
        _address = [aDecoder decodeObjectForKey:@&quot;address&quot;];
    }
    return self;
}

- (void)encodeWithCoder:(NSCoder *)aCoder
{
    [aCoder encodeObject:self.shopID forKey:@&quot;shopid&quot;];
    [aCoder encodeObject:self.title forKey:@&quot;title&quot;];
    [aCoder encodeObject:self.discount forKey:@&quot;discount&quot;];
    [aCoder encodeObject:self.address forKey:@&quot;address&quot;];
}
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Thu, 26 Jun 2014 15:59:06 +0800</pubDate>
        <link>/2014/06/26/xu-lie-hua-yu-fan-xu-lie-hua/</link>
        <guid isPermaLink="true">/2014/06/26/xu-lie-hua-yu-fan-xu-lie-hua/</guid>
        
        
      </item>
    
      <item>
        <title>loadView与viewDidLoad的区别</title>
        <description>&lt;p&gt;&lt;strong&gt;观察下面这个例子会出现什么结果&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objc&quot; data-lang=&quot;objc&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loadView&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;who am i&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;8&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;UIColor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




&lt;!--more--&gt;


&lt;p&gt;分析：发现loadView和viewDidload会一直循环调用，原因何在&lt;/p&gt;

&lt;p&gt;我们发现只要self.view为nil，它就会调用一次loadview&lt;/p&gt;

&lt;p&gt;于是我们猜想_view的getter方法里是这样写的&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if(_view == nil)
{
...
   [self loadView];
   [self viewDidLoad];
...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下面是一涨生命周期的图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/lazyyang/lazyyang.github.com/source/source/images/img/lifeCircle.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 26 Jun 2014 09:30:33 +0800</pubDate>
        <link>/2014/06/26/loadviewyu-viewdidloadde-qu-bie/</link>
        <guid isPermaLink="true">/2014/06/26/loadviewyu-viewdidloadde-qu-bie/</guid>
        
        
      </item>
    
      <item>
        <title>腾讯iOS面试题</title>
        <description>&lt;h1&gt;腾讯&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;昨天去面腾讯地图的iOS，下面是我总结的一些问题。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;假如沙盒路径下有一个文件，文件里面有1000万个学生成绩，怎么对这个学生的成绩进行排序让其效率更高(假设内存足够大，可以一次性载入1000万个学生)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从1000万个数里以最快的效率选出其中最大的100个(假设内存足够大，可以一次性载入1000万个成绩)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;!--more--&gt;


&lt;ol&gt;
&lt;li&gt;&lt;p&gt;一个简单的游戏 &lt;br/&gt;
a.假如有3个杯子，其中有一个杯子的下面有钻石，现在让你选一个， 然后系统帮你去除一个没有钻石的杯子，现在问你要不要换另外一个杯子(也就是问剩下两个杯子下面有钻石的概率是不是一样的) &lt;br/&gt;
b.换一种情况。假如有1000万张彩票(只有一张中奖)，先让你从1000玩里随便选一个，然后系统帮你去除其中9999998张没中奖的，留下你选的一张和另外一张，问你要不要换成剩下的另一张(同样是问剩下两张彩票的中奖概率是不是一样的)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;你对iOS哪一块最了解？然后针对那一点各种问。我说我对下载模块比较熟悉，然后他就各种问。例如通过NSURLCOnnection下载的数据与UI交互的优化、断点下载的实现原理等&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LRUCache算法.比如你有10M的内存，怎么去处理20M的文件&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;你对MVC的理解，你如何你构架一个项目&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;短信功能中，scrollview下移量和手势下移量不成比例，求这两个下移量的关系算法&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;总结&lt;/h3&gt;

&lt;p&gt;其实腾讯的面试，更多是引导型的面试。即使你iOS全部会，你说你的算法很厉害(那面试官可能更侧重的去问你算法)，只要你有一点能够打动面试官，那么得到offer的可能性也就更大了。&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Jun 2014 09:26:26 +0800</pubDate>
        <link>/2014/06/25/teng-xun-iosmian-shi-ti/</link>
        <guid isPermaLink="true">/2014/06/25/teng-xun-iosmian-shi-ti/</guid>
        
        
      </item>
    
      <item>
        <title>在Octopress上搭建一个github博客</title>
        <description>&lt;h2&gt;安装&lt;/h2&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;首先我们得先配置ruby、git环境，这里就不讲了。&lt;/li&gt;
&lt;li&gt;先cd到一个好的目录，比如Desktop,然后开始下载Octopress&lt;br/&gt;
&lt;code&gt;$ git clone https://github.com/imathis/octopress.git&lt;/code&gt;&lt;br/&gt;
&lt;code&gt;$ cd octopress&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装一些东西&lt;br/&gt;
&lt;code&gt;$ gem install bundler&lt;/code&gt;&lt;br/&gt;
&lt;code&gt;$ rbenv rehash&lt;/code&gt;&lt;br/&gt;
&lt;code&gt;$ bundle install&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;这样就装好Octopress了，我们可以&lt;code&gt;rake preview&lt;/code&gt;在本地查看，如果&lt;code&gt;rake preview&lt;/code&gt;报错的话，如下，&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You have already activated rake 10.1.1, but your Gemfile requires rake 0.9.2.2. Prepending &lt;code&gt;bundle exec&lt;/code&gt; to your command may solve this.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;可能是因为你的rake版本过高，这时候就需要你在&lt;code&gt;rake preview&lt;/code&gt;的前面加上&lt;code&gt;bundle exec&lt;/code&gt;&lt;/p&gt;

&lt;!--more--&gt;


&lt;h2&gt;发布&lt;/h2&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;在github上创建一个名为&lt;code&gt;username.github.com&lt;/code&gt;的repository&lt;/li&gt;
&lt;li&gt;在Octopress目录里设定资料&lt;br/&gt;
&lt;code&gt;$ rake setup_github_pages&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;生成HTML&lt;br/&gt;
&lt;code&gt;$ rake generate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;发布&lt;br/&gt;
&lt;code&gt;$rake deploy&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;strong&gt;这样等几分钟，你就可以在你的网页,例如&lt;a href=&quot;http://lazyyang.github.com&quot;&gt;http://lazyyang.github.com&lt;/a&gt;上浏览你的博客了&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;配置博客&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;我们需要在github上另外创建一个source分支，这个分支专门用来博客相关属性、写博客以及主题等&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;配置博客相关属性&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;配置博客，相关配置文件在_config.yml文件里
&lt;code&gt;$ vi  _config.yml&lt;/code&gt;&lt;br/&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/lazyyang/lazyyang.github.com/source/source/images/img/octopress_1.png&quot; alt=&quot;&quot; /&gt;
&lt;strong&gt;其中url是必填项，为你的博客地址&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;写博客&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;写博客&lt;br/&gt;
&lt;code&gt;$ cd source&lt;/code&gt;&lt;br/&gt;
&lt;code&gt;$ cd _posts&lt;/code&gt;&lt;br/&gt;
&lt;code&gt;$ rake new_post[&quot;博客名字&quot;]&lt;/code&gt;&lt;br/&gt;
&lt;strong&gt;这样就创建了一个名为markdown的文件，然后在markdown里面写博客了&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;同步github&lt;br/&gt;
&lt;code&gt;$ git add .&lt;/code&gt;&lt;br/&gt;
&lt;code&gt;$ git commit -m &quot;a new blog&quot;&lt;/code&gt;&lt;br/&gt;
&lt;code&gt;$ git pull orgin source&lt;/code&gt; &lt;br/&gt;
&lt;code&gt;$ git push origin source&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;发布文章&lt;br/&gt;
&lt;code&gt;$ rake generate&lt;/code&gt;&lt;br/&gt;
&lt;code&gt;$ rake deploy&lt;/code&gt;&lt;br/&gt;
&lt;strong&gt;这样文章就成功同步到blog上去了&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;:##多台电脑管理博客&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;目前github上已经部署了我们的博客了，现在需要在另外一台电脑上继续写博客，该怎么处理&lt;/strong&gt; &lt;br/&gt;
&lt;strong&gt;Octopress的git仓库(repository)有两个分支，分别是&lt;code&gt;master&lt;/code&gt;和&lt;code&gt;source&lt;/code&gt;。&lt;code&gt;master&lt;/code&gt;存储的事博客网站本身,而&lt;code&gt;source&lt;/code&gt;存储的是生成博客的源文件。&lt;code&gt;master&lt;/code&gt;的内容放在根目录的&lt;code&gt;_deploy&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将source分支clone到本地&lt;br/&gt;
&lt;code&gt;$ git clone -b source git@github.com:username/username.github.com.git octopress&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后将master的clone到octopress的_deploy文件夹内&lt;br/&gt;
&lt;code&gt;$ cd octopress&lt;/code&gt;    &lt;br/&gt;
&lt;code&gt;$ git clone git@github.com:username/username.github.com.git  _deploy&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后安装博客，即bundler和需要的rubygem   &lt;br/&gt;
&lt;code&gt;$ gem install bundler&lt;/code&gt; &lt;br/&gt;
&lt;code&gt;$ rbenv rehash&lt;/code&gt;  &lt;br/&gt;
&lt;code&gt;$ bundle install&lt;/code&gt;   &lt;br/&gt;
&lt;code&gt;$ rake setup_github_pages&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 24 May 2014 00:06:41 +0800</pubDate>
        <link>/2014/05/24/create-octopress-blog/</link>
        <guid isPermaLink="true">/2014/05/24/create-octopress-blog/</guid>
        
        
      </item>
    
  </channel>
</rss>
